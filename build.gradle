apply plugin: 'java'
apply plugin: "com.github.spacialcircumstances.gradle-cucumber-reporting"


dependencies {
    testImplementation 'info.cukes:cucumber-java:1.2.5'
    testImplementation 'info.cukes:cucumber-junit:1.2.5'
    implementation group: 'com.github.mkolisnyk', name: 'cucumber-runner', version: '1.3.5'


}

repositories {
    mavenCentral()
}
configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.0.b2'
    }
}


buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.spacialcircumstances:gradle-cucumber-reporting:0.1.24"
  }
}


cucumberReports {
  outputDir = file('build/cucumber-reports')
  buildId = '0'
  reports = files('build/cucumber-reports/cucumber-report.json')
}

abstract class ReportTask extends DefaultTask {

    private String reportUrl;
    private String githubUrl;

    @Option(option = "reportUrl", description = "sets reportUrl")
    public void setReportUrl(String reportUrl) {
        this.reportUrl = reportUrl;
    }

    @Option(option = "githubUrl", description = "sets githubUrl")
    public void setGithubUrl(String githubUrl) {
        this.githubUrl = githubUrl;
    }

    def updateReport(String reportFilePath) {
        reportFilePath = reportFilePath.replaceAll("\\\\", "/")
        String fileContents = new File(reportFilePath).text
        FileWriter fWriter = new FileWriter(reportFilePath)
        BufferedWriter writer = new BufferedWriter(fWriter)
        writer.write(updateFileContents(fileContents, reportFilePath.split("/").last()))
        writer.close()
    }

    String updateFileContents(String fileContents, String fileName){
        String delimiter = '<li role="presentation"'
        return fileContents.replaceFirst(delimiter,
            delimiter + " ><a href=\"${previousReportUrl() + fileName}\">Previous results</a></li>\n" +
            delimiter + " ><a href=\"${latestReportUrl() + fileName}\">Latest results</a></li>\n" +
            delimiter + " ><a href=\"${githubUrl()}\">Github</a></li>\n" + delimiter)

    }

    String previousReportUrl(){
        def reportUrlSplit = reportUrl.split("/")
        return replaceRunNumber((reportUrlSplit.last().toInteger() - 1).toString())
    }

    String latestReportUrl(){
        return replaceRunNumber("lastCompletedBuild")
    }

    String githubUrl(){
        return githubUrl
    }

    String replaceRunNumber(String runNumber){
        def reportUrlSplit = reportUrl.split("/")
        reportUrlSplit[reportUrlSplit.size() - 1] = runNumber
        String updatedReportUrl = ""
        reportUrlSplit.each {path -> updatedReportUrl += path + "/"}
        return updatedReportUrl
    }

    @TaskAction
    def updateReports() {
        new File('build/cucumber-reports/cucumber-html-reports/').eachFileRecurse(groovy.io.FileType.FILES) {
            if(it.name.endsWith('.html')) {
                updateReport(it.toString())
            }
        }
    }

}

tasks.register('updateReports', ReportTask)